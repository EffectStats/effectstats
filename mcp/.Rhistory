.libPaths(c("~/R/library", .libPaths()))
library(mcpr)
Rscript -e 'remotes::install_github("devOpifex/mcpr", lib="~/R/library")'
Rscript -e 'remotes::install_github("devOpifex/mcpr", lib="~/R/library")'
:q
R
.libPaths(c('~/R/library', .libPaths()))
.libPaths(c('~/R/library', .libPaths()))
library(mcpr)
Rscript -e "remotes::install_github('devOpifex/mcpr', lib='~/R/library')"
install.packages("remotes", lib="~/R/library")
remotes::install_github("devOpifex/mcpr", lib="~/R/library")
library(mcpr)
install.packages("yyjsonr", type="binary", lib="~/R/library")
nix-shell -p clang pkgconfig gettext
q()
install.packages("mcpr")
q()
install.packages("remotes")
remotes::install_github("devOpifex/mcpr")
q()
remotes::install_github("devOpifex/mcpr")
Rscript server.R
q()
install.packages("roxygen2")
remotes::install_github("devOpifex/mcpr")
q()
remotes::install_github("effectsize/mcptools")
q()
remotes::install_github("effectstats/mcptools")
remotes::install_github("posit-dev/mcptools")
q()
remotes::install_github("r-lib/nanonext@v0.10.0")
library(nanonext)
q()
remotes::install_github("devOpifex/mcptools")
q()
q()
serve_http(mcp, port=3000, path="/mcp")
curl -X POST http://localhost:3000/mcp \
  -H "Content-Type: application/json" \
  -d '{"jsonrpc":"2.0","method":"math_calculator","params":{"operation":"add","a":12,"b":12},"id":1}'
library(mcpr)
serve_http(mcp, port = 3000, path = "/mcp")
library(mcpr)
serve_http(mcp, port = 3000, path = "/mcp")
.vsc.attach()
q()
install.packages("curl")
library(curl)
curl::has_internet()

install.packages("pak")
pak::pak("jrowen/rhandsontable")

shiny::runApp("app.R")

setwd("~/Desktop/mcptest")

q()
